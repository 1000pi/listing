package listing

type List interface {
	Len() int
	Replace([]int) List
}

type IntList []int

func (il IntList) Len() int {
	return len(il)
}

func (il IntList) Replace(indices []int) List {
	result := make(IntList, len(indices), len(indices))
	for i, idx := range indices {
		result[i] = il[idx]
	}
	return result
}

type RuneList []rune

func (rl RuneList) Len() int {
	return len(rl)
}

func (rl RuneList) Replace(indices []int) List {
	result := make(RuneList, len(indices), len(indices))
}
